-- db_init/init.sql
CREATE TABLE IF NOT EXISTS category (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    color VARCHAR(7) NOT NULL -- HEX Color like #FFFFFF
);

CREATE TABLE IF NOT EXISTS category_parent (
    childCategoryId INTEGER NOT NULL,
    parentCategoryId INTEGER NOT NULL,
    PRIMARY KEY (childCategoryId, parentCategoryId),
    FOREIGN KEY (childCategoryId) REFERENCES category(id) ON DELETE CASCADE,
    FOREIGN KEY (parentCategoryId) REFERENCES category(id) ON DELETE CASCADE
);

-- Stores information about each uploaded and processed image/document/exam
CREATE TABLE IF NOT EXISTS exam (
    -- 'id' corresponds to your "ID-IMG", Primary Key, auto-incrementing
    id SERIAL PRIMARY KEY,
    -- 'original_filename' stores the original name of the uploaded file
    original_filename TEXT,
    -- 'processed_image_path' corresponds to your "Path-to-img" (relative path)
    processed_image_path TEXT NOT NULL UNIQUE,
    -- 'upload_timestamp' automatically records when the exam record was created
    upload_timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Stores information about each classified rectangle within an exam
CREATE TABLE classified_rectangle (
    -- Technical (surrogate) Primary Key for easy referencing of individual rows
    id SERIAL PRIMARY KEY,
    -- Foreign Key referencing the exam table ('ID-IMG')
    exam_id INTEGER NOT NULL REFERENCES exam(id) ON DELETE CASCADE,
    -- This value needs to be generated by the backend application logic (see below)
    rect_index INTEGER NOT NULL,
    -- Coordinates and dimensions
    x_coord REAL NOT NULL,
    y_coord REAL NOT NULL,
    width REAL NOT NULL,
    height REAL NOT NULL,
    -- Foreign key linking to the category table
    category_id INTEGER REFERENCES category(id) ON DELETE SET NULL,
    -- Hierarchy level 
    hierarchy TEXT,
    -- Path to the cropped image snippet
    cropped_image_path TEXT NOT NULL,
    -- Timestamps and metadata
    creation_timestamp TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    source VARCHAR(50),

    -- CONSTRAINT to ensure that the combination of exam_id and rect_index is unique
    CONSTRAINT unique_rect_per_exam UNIQUE (exam_id, rect_index)
);

-- dummy-categories
INSERT INTO category (name, color) VALUES
('Question Block', '#FFD700'),
('Answer Area', '#ADD8E6'),
('Marking Space', '#90EE90'),
('Metadata', '#D3D3D3');