
services:
  frontend:
    build: ./frontend
    container_name: exam-frontend
    ports:
      - "3000:3000" # removed nginx
    restart: unless-stopped
    depends_on:
      - backend # wait till backend is ready
    networks:
      - exam-network

  backend:
    build: ./backend
    container_name: exam-backend
    ports:
      - "5001:5001" # Map Host Port 5001 to Container Port 5001 (Flask default)
    volumes:
      - ./backend:/app # Mount local backend code into container for development
      # Optional: Mount Upload-Verzeichnis, wenn Dateien persistiert werden sollen
      # - ./uploads:/app/uploads
    environment:
      # environment variables can be loaded from .env file later
      FLASK_APP: app.py
      FLASK_DEBUG: 1 # for development
      POSTGRES_DB: examdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      # DATABASE_URL: postgresql://user:password@db:5432/examdb
    restart: unless-stopped
    depends_on:
      - db # Backend starts after DB is ready
    networks:
      - exam-network

  db:
    image: postgres:15-alpine # PostgreSQL als Datenbank
    container_name: exam-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./db_init:/docker-entrypoint-initdb.d # for initial SQL scripts
    environment:
      POSTGRES_DB: examdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password # use secure method later
    ports:
      - "5432:5432" # for debugging/external access
    restart: unless-stopped
    networks:
      - exam-network

networks:
  exam-network:
    driver: bridge

volumes:
  postgres_data: # named volumen for PostgreSQL data